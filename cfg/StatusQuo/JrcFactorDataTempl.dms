template JrcFactorDataTempl: IsHidden = "true"
{
	unit<WPoint> domain_grid;
		
	// ============ factor data
	container PrepareData {
		attribute<Classifications/LU/Corine> CorineGrid_2012    (domain_grid) := invert(Classifications/Lu/Corine/CLC12_Code)[LoadSpatialData/LandUse_2012/inFile/ReadData];
		attribute<Classifications/LU/Corine> CorineGrid_2018    (domain_grid) := invert(Classifications/Lu/Corine/CLC12_Code)[LoadSpatialData/LandUse_2018/inFile/ReadData];
		attribute<Classifications/LU/Corine> CorineGrid_2018_Org(domain_grid) := invert(Classifications/Lu/Corine/CLC12_Code)[LoadSpatialData/LandUse_2018_Org/inFile/ReadData];
		attribute<Classifications/LU/Corine> CorineGrid         (domain_grid) := MakeDefined(CorineGrid_2018, CorineGrid_2018_org, CorineGrid_2012);
		
		attribute<Classifications/LU/ModelType> LandUse2012Grid (domain_grid) := Classifications/LU/Corine/MT[CorineGrid_2012];
		attribute<Classifications/LU/ModelType> LandUse2018Grid (domain_grid) := Classifications/LU/Corine/MT[CorineGrid_2018];
		attribute<Classifications/LU/ModelType> LandUseGrid     (domain_grid) := Classifications/LU/Corine/MT[CorineGrid];
		
		container LoadSpatialData := for_each_ne(MetaData/DataManagement/SpatialDataToLoad/Name, 'Templates/loadDataFile_'+MetaData/DataManagement/SpatialDataToLoad/Type+'('+Quote(MetaData/DataManagement/SpatialDataToLoad/Path)+', domain_grid)');
	}
	
	container TiffData: IsHidden = "True"
	{
		container CorineGrid // already read in CaseData
		{
			attribute<Classifications/LU/Corine>    CorineLandUse	(domain_grid) := PrepareData/CorineGrid;
			attribute<Classifications/LU/ModelType> ModelLandUse 	(domain_grid) := Classifications/LU/Corine/MT [CorineLandUse];
			attribute<Classifications/LU/ViewType>  ViewLandUse  	(domain_grid) := Classifications/LU/Corine/VT2[CorineLandUse];
		}
		Unit<WPoint> Eu27_e: StorageName = "%LuisettaDataDir%/Elevation/eu27_e_ha.tif", StorageReadOnly = "True", DialogData = "Geography/LambertEA"
		{
			attribute<units/meter> Elevation (domain_grid): Expr="value(ReadData, units/meter)" ;
			attribute<Int16> GridData: IsHidden = "True";
			attribute<Int16> ReadData(domain_grid);
		}
		Unit<WPoint> slope_continuous: StorageName = "%LuisettaDataDir%/Elevation/slope_deg_int16.tif", StorageReadOnly = "True", DialogData = "Geography/LambertEA"
		{
			attribute<units/degrees> slope (domain_grid): expr="value(ReadData, units/degrees)" ;
			attribute<Int16> GridData (Eu27_e): IsHidden = "True";
			attribute<Int16> ReadData(domain_grid);
		}				
		
		unit<WPoint> erosionRisk: StorageName = "%LuisettaDataDir%/SensitiveAreas/erosion_peseta.tif", StorageReadOnly = "True", DialogData = "Geography/LambertEA"
		{
			attribute<units/tonne_ha> erosionRisk(domain_grid): expr = "value(replace_value(ReadData, Int16(-32768), Int16(0 / 0)), units/tonne_ha)" ;
			attribute<Int16> GridData: IsHidden = "True";
			attribute<Int16> ReadData(domain_grid);
		}
		unit<wpoint> salinity2: StorageName = "%LuisettaDataDir%/NECR/salinity.tif", DialogData = "Geography/LambertEA"
		{
			attribute<uint8>	GridData: IsHidden = "True";
			attribute<uint8>	ReadData (domain_grid);
		}
			
		unit<WPoint> Natura2000: StorageName = "%LuisettaDataDir%/SensitiveAreas/n2k_v2011_bin.tif", StorageReadOnly = "True", DialogData = "Geography/LambertEA"
		{
			attribute<units/boolean> Natura2000 (domain_grid): Expr = "value(replace_value(ReadData, Int8(-1), Int8(0 / 0)),units/boolean)";
			attribute<int8> GridData: IsHidden = "True";
			attribute<int8> ReadData(domain_grid);
		}
		unit<WPoint> Natura2000Priority: StorageName = "%LuisettaDataDir%/SensitiveAreas/Natura2000_End2011_clean_union_Priority_bin.tif", StorageReadOnly = "True", DialogData = "Geography/LambertEA"
		{
			attribute<uint2> Natura2000Priority (domain_grid);
			attribute<uint2> GridData: IsHidden = "True";
			attribute<uint2> ReadData(domain_grid);
		}
		unit<WPoint> NDA_Cat: StorageName = "%LuisettaDataDir%/SensitiveAreas/CDDA_v9_clean_unionCat.tif", StorageReadOnly = "True", DialogData = "Geography/LambertEA"
		{
			attribute<uint8> NDA_Cat (domain_grid);
			attribute<uint8> GridData: IsHidden = "True";
			attribute<uint8> ReadData(domain_grid);
		}				 	
		unit<uint8> salinityClass: nrofrows = 4
		{
			attribute<string> Label: DialogType = "LabelText", ['zero','Medium', 'Low', 'High' ];
			attribute<uint4>   FileValue: [0, 1, 2, 3];
			attribute<Float32> SuitValue: [null, 15, -15, 35 ]; 											
		}
		attribute<salinityClass> salinity(domain_grid): expr = "TiffData/salinity2/ReadData[salinityClass]";
		
						
		unit<uint16> ErodibilityClass: nrofrows= 7
		{
			attribute<string> Label: DialogType = "LabelText", ['zero', 'very low erosion', 'very weak', 'weak', 'Moderate','Strong','very strong' ];
			attribute<uint16>   FileValue: [0, 1, 2, 3, 4, 5, 6];
			attribute<Float32> SuitValue: [null, 0, 0, 0, 10, 20, 25];									
		}
			attribute<ErodibilityClass> Erodibility(domain_grid): StorageName = "%LuisettaDataDir%/NECR/erodibility.tif"; 	
			
				
		unit<wpoint> ContaminatedLands:
             StorageName       = "%LuisettaDataDir%/NECR/PotentialContaminatedLand.tif"
             , StorageReadOnly = "True"
             , DialogData      = "Geography/LambertEA"
          {
             attribute<uint8> GridData: IsHidden = "True";
             attribute<uint8> ReadData(domain_grid);
             attribute<uint8> IsContaminated(domain_grid): Expr  = "ReadData == 4[uint8] || ReadData == 5[uint8]  ? uint8(20) : uint8(0)";
           }		
		unit<wpoint> FibonacciArableClassif:
             StorageName       = "%LuisettaDataDir%/suitability/suitarafibonacc.tif"
             , StorageReadOnly = "True"
			 , StorageType = "gdal.grid"
             , DialogData      = "Geography/LambertEA"
          {
             attribute<uint8> GridData: IsHidden = "True";
             attribute<uint8> ReadData(domain_grid);
             attribute<int8> ReadDataint8(domain_grid): Expr  = "int8(ReadData)";
           }			   
	}
	
	container LocSpec_NECR
	{
		attribute<Float32> NECR_LocSpec(domain_grid): Expr = "(TiffData/salinityClass/SuitValue [TiffData/salinity]) + " 
		" (TiffData/ErodibilityClass/SuitValue [TiffData/Erodibility]) + "
		" Float32(TiffData/ContaminatedLands/IsContaminated)";
	}
	attribute<Geography/Lambert100mGrid> Lambert100mGridRel(domain_grid) := ID(domain_grid)[Geography/Lambert100mGrid];
	
// Added container for Integration locspec files 	
	Container ReferenceLocSpecs
	{
		attribute<int8> Urban                   (domain_grid): expr = "const(0, domain_grid, int8)";
		attribute<int8> Industrial              (domain_grid): expr = "Biodiversity/LOCSPECS/LocSpecsInd";

		attribute<int8> Arable       	        (domain_grid): expr = "CAP/LOCSPECS/LocSpecsAra";
		attribute<int8> PermanentCrops          (domain_grid): expr = "CAP/LOCSPECS/LocSpecsPC";
		attribute<int8> Pastures                (domain_grid): expr = "CAP/LOCSPECS/LocSpecsPast";
		
		attribute<int8> ForestsMature           (domain_grid): expr = "Biodiversity/LOCSPECS/LocSpecsFor";
		attribute<int8> TransWoodlandShrub      (domain_grid): expr = "const(0, domain_grid, int8)";
		
		attribute<int8> NewEnergyCrops          (domain_grid): expr = "CAP/LOCSPECS/LocSpecNecr";

		attribute<int8> SHVA                    (domain_grid): expr = "const(0, domain_grid, int8)";
		
		attribute<int8> ForestsYoung            (domain_grid): expr = "Biodiversity/LOCSPECS/LocSpecsFor";
		
		attribute<int8> AbanArable        (domain_grid) := const(0, domain_grid, int8);
		attribute<int8> AbanPermanentCrops(domain_grid) := const(0, domain_grid, int8);
		attribute<int8> AbanPastures      (domain_grid) := const(0, domain_grid, int8);
		attribute<int8> AbanUrban         (domain_grid) := const(0, domain_grid, int8);
		attribute<int8> AbanIndustry      (domain_grid) := const(0, domain_grid, int8);
	}

	// endogenous distance factors

	container BurntAreas
	{
		unit<uint32> BurntAreas_shape: StorageName = "%LuisettaDataDir%/forests/BurntAreas2000-2012.dbf", StorageReadOnly = "True", DialogData = "Geometry", DialogType = "map"
		{
			attribute<Geography/LambertEA> 	Geometry (polygon): StorageName = "%LuisettaDataDir%/forests/BurntAreas2000-2012.shp", StorageReadOnly = "True";
			attribute<uint32>				YearSeason;
		}
		attribute<BurntAreas_shape> 	BurntGrid_id (domain_grid):	expr = "poly2grid(BurntAreas_shape/Geometry, domain_grid)";
		attribute<uint32>				BurntInYear	 (domain_grid):	expr = "BurntAreas_shape/YearSeason[BurntGrid_id]";
	}
	#include <Biodiversity.dms>
	
	container StaticModelTypeNeighbourhoods
	{
		container Small := for_each_nedv(Classifications/LU/ModelType/name, 'potential(float32(PrepareData/LandUseGrid == Classifications/LU/ModelType/V/'+Classifications/LU/ModelType/Name+'), /Parameters/FuncKernels/QueensNeighbours/Matr)'
		, domain_grid, float32);
		container Large := for_each_nedv(Classifications/LU/ModelType/name, 'potential(float32(PrepareData/LandUseGrid == Classifications/LU/ModelType/V/'+Classifications/LU/ModelType/Name+'), /Parameters/FuncKernels/LinearDecay1km/Matr)'
		, domain_grid, float32);
	}
}


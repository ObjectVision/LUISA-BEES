container RunRegions: Using = "Geography/AdministrativeBoundaries;"
{
	container RegionalSets := for_each_ne(BoundarySets/uniName, 'getRegionSet(JrcRegionId, Geography/Regions/'+ BoundarySets/uniName +')')
	{
		container RunAreas           := getRegionSet(JrcRegionId, Geography/Regions/RunAreas);
		container Capri              := getRegionSet(JrcRegionId, Geography/Regions/Capri);
		container ForestDemandRegions:= getRegionSet(JrcRegionId, Geography/Regions/ForestDemandRegions);
	}
	container UnitSets := for_each_ind('nex', BoundarySets/uniName, 'RegionalSets/'+ BoundarySets/uniName +'/Set16',uint16)
	{
		unit<uint16> RunAreas           := RegionalSets/RunAreas/Set16;
		unit<uint16> ForestDemandRegions:= RegionalSets/ForestDemandRegions/Set16;
		unit<uint16> Capri              := RegionalSets/Capri/Set16;
		
	}
	container RasterSets := for_each_nedvn(BoundarySets/uniName, 'poly2grid(UnitSets/'+ BoundarySets/uniName +'/geometry, domain_grid)', domain_grid, UnitSets, BoundarySets/uniName)
	{
		attribute<UnitSets/RunAreas> 			RunAreas 			(domain_grid) := poly2grid(UnitSets/RunAreas/geometry, domain_grid);
		attribute<UnitSets/ForestDemandRegions> ForestDemandRegions (domain_grid) := poly2grid(UnitSets/ForestDemandRegions/geometry, domain_grid);
		attribute<UnitSets/Capri> 				Capri 				(domain_grid) := poly2grid(UnitSets/Capri/geometry, domain_grid);
	}
	
	template getRegionSet
	{
		parameter<Geography/Regions/Runs> RunRegion;
		unit<uint32> OrgZones;
		
//		unit<uint16> Set16 := subset_uint16(OrgZones/RunAreaID == Geography/Regions/Runs/ZoneId[RunRegion]) // USE THIS when GeoDmsVersion() >= 7.208
		unit<uint32> Set   := subset(OrgZones/RunAreaID == Geography/Regions/Runs/ZoneId[RunRegion]);
		unit<uint16> Set16 := range(uint16, 0w, uint16(#Set))
		{
			attribute<OrgZones>     nr_OrgEntity     := union_data(., Set/nr_OrgEntity);
			attribute<string> 		ZoneId           := OrgZones/ZoneId  [Nr_OrgEntity];
			attribute<LambertEA> 	Geometry(polygon):= OrgZones/Geometry[Nr_OrgEntity];
			attribute<string>		Label            := OrgZones/Label   [Nr_OrgEntity], DialogType = "LabelText";
		}
	}
}
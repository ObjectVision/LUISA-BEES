container CompareDemands
{
	unit<uint32> Percentage := 0.01 * BaseUnit('', uint32);
	
	container Classifications {
		unit<uint32> Country := range(uint32, 0, 3) {
			attribute<string> name: [ 'Ireland', 'Netherlands', 'Slovenia'];
			attribute<string> code: [ 'IE', 'NL', 'SI' ];
		}
		unit<uint32> AI := range(uint32, 0, 11) {
			attribute<Percentage>  p : [ 00, 01, 02, 03, 04, 05, 06, 07, 08, 09, 10 ];
			attribute<string> name  := 'AI'+(p<10?'0':'')+string(P);			
		}
		unit<uint32> Year := range(uint32, 0, 8) {
			attribute<string> name  : [ 'P2015', 'P2020', 'P2025', 'P2030', 'P2035', 'P2040', 'P2045', 'P2050' ];
		}
		unit<uint32> ResultFile := combine(AI, Country, Year)
		{
			attribute<string> name := AI/name[nr_1]+'_AW00_'+Country/name[nr_2]+'_'+Year/name[nr_3];
			attribute<string> FileName := name+'_ShadowPrices.csv';
			attribute<string> graph_file_key := Country/code[nr_2];
			attribute<string> graph_col_key  := Year/name[nr_3];
			attribute<Percentage> graph_row_value := AI/p[nr_1];
			attribute<string>     graph_row_key   := AI/name[nr_1];
		}
		
	}
	container RawDataFiles := for_each_nxat(Classifications/ResultFile/name, uint32
		,	'%SourceDataDir%/FORBIO/capri/Luisa-BEES-Capri_interaction/StatusQuo9/'+Classifications/ResultFile/FileName
		,	'gdal.vect'
		)
	,	SyncMode = "all"
	;
	container DataFiles	:= for_each_nex(Classifications/ResultFile/name, 'subset(!IsDefined(strpos(RawDataFiles/'+Classifications/ResultFile/name+'/ZoneID, '' '')))', uint32);
	
	unit<uint32> Data := ='union_unit('+AsItemList('DataFiles/'+Classifications/ResultFile/name)+')'
	{
		attribute<string> graph_file_key  := ='union_data(., '+AsItemList(Quote(Classifications/ResultFile/graph_file_key+'_')+'+RawDataFiles/'+Classifications/ResultFile/name+'/ZoneID[DataFiles/'+Classifications/ResultFile/name+'/nr_OrgEntity]')+')';
		attribute<string> graph_col_key   := ='union_data(., '+AsItemList(Quote(Classifications/ResultFile/graph_col_key))+')';
		attribute<float64> Arable_Price   := ='MakeDefined(Float64(union_data(., '+AsItemList('RawDataFiles/'+Classifications/ResultFile/name+'/Arable_Price[DataFiles/'+Classifications/ResultFile/name+'/nr_OrgEntity]')+')), 1e+10)';
		attribute<string> ResultFile_name := ='union_data(., '+AsItemList('const('+Quote(Classifications/ResultFile/name)+', DataFiles/'+Classifications/ResultFile/name+')')+')';
		attribute<Classifications/ResultFile> ResultFile_rel := rlookup(ResultFile_name, Classifications/ResultFile/name);
		attribute<Percentage> graph_row_value := Classifications/ResultFile/graph_row_key[ResultFile_rel];
		attribute<string> graph_row_key   := Classifications/ResultFile/graph_row_key[ResultFile_rel];
		attribute<string> filerow_key := graph_file_key + graph_row_key;
//		attribute<string> filecol_key := graph_file_key + graph_col_key;
	}
	
	container ExportData {
		unit <uint32> Files := unique(Data/graph_file_key)
		{
			attribute<.> per_Data(Data) := rlookup(Data/graph_file_key, Values);
			attribute<string> FileName := Values + '.csv';
			
			attribute<string> result
			:= 'ArableDemandIncrease;'+AsList(Classifications/Year/name, ';')+'\n'
				+AsList(string(FileRow/result_line), '\n', FileRow/nr_1)
			,	StorageName = "%SourceDataDir%/FORBIO/capri/Luisa-BEES-Capri_interaction/SQ10_MergedResults"
			,	StorageType = "strfiles"
			;
		}
		unit<uint32> FileRow := combine(Files, Classifications/AI) {
			attribute<Files>                File_rel := nr_1;
//			attribute<Classifications/Year> Col_rel := nr_2;
			attribute<string> FileRow_key := Files/Values[File_rel] + Classifications/AI/Name[nr_2];
			attribute<.> per_Data(Data) := rlookup(Data/FileRow_key, FileRow_key);
			
			attribute<string> result_line := string(classifications/AI/P[nr_2])+';'+AsList(string(Data/Arable_Price), ';', per_data);
			
		}
/*		
		unit<uint32> FileCol := combine(Files, Classifications/Year) {
			attribute<Files>                File_rel := nr_1;
//			attribute<Classifications/Year> Col_rel := nr_2;
			attribute<string> FileCol_key := Files/Values[File_rel] + Classifications/Year/Name[nr_2];
			attribute<.> per_Data(Data) := rlookup(Data/filecol_key, FileCol_key);
		}
*/
	}
}

# MNLcalibration for EUCS100
#  beta 0 = intercept
#  betas 1..n = regression coefficients
#  betas 0..n are land-use class-dependant (if land use is the dependant variable)
# z=beta 0 + beta 1x ..+ beta nx
# 'z' is therefore the measure of the total contribution of all independant variables
 
 #PUT DBF files resulting from python script "factor_maps_2DBF_4MNL.py" here:
setwd("Z:\\tools\\EuClue\\4workstation\\CLCr_files\\allocFiles")

##read DBF output from Arc Map's "sample" 
#open necessary package:
library(foreign)
#increase memory if needed:
memory.limit(size=1000000)

##factor map numbers
#acc2ramps:      71
#acc2airports:   75
#acc2cities:     77
#acc2ports:      74
#acc2towns:      73
#dist2roads:     76
#claycont:        8
#biomassPot:     72
#slope:          65
#southFacinSlope:66

##START LOOP###
#read data#

files=list.files()
filesn<- (substr(files,0,2)) 
print(filesn)
#WRITE OUT THE NUMBER WITHOUT SCIENTIFIC NOTATION
options(scipen=2)

for ( a in files ) 
{ 
	rawdata=read.dbf(paste(a))
	rawdata$clc06r_end<-as.factor(rawdata$clc06r_end)
	rawdata$sosl_euro<-as.factor(rawdata$sosl_euro)
	
	#retrieve the reference class, this is the one with the maximum number of samples
	breaks<- c(0:6)
	histo<- (summary(rawdata$clc06r_end))
	t<- data.frame(cbind(breaks,histo))
	max<- max(t)
	r<- (t$histo==max)
	refval<- (t$breaks[r])
	filesn<- (substr(a,0,2)) 
	print(refval)
	print("reference class for NUTS ")
	print(filesn)
	print("is class number ")
	print(refval)
	
	##MNL##
	library(mlogit)
	mldata<-mlogit.data(rawdata, varying=NULL, choice="clc06r_end", shape="wide")
	mlogit.model<- mlogit(clc06r_end~1| access_cit+access_tow+dist2roads+claycont_0+
	slope_euro, data = mldata, reflevel=refval+1)
	#flag is used to retreive proper coefficients within the matrix
	#val is used to denot the land cover class; coefficients must not be read from 
	#matrix if the val==reference class
	flag0=0
	val=0
	if (val==refval) {
		alloc1<-data.frame(rbind(c(refval," "),c(0," "),c(1,""),c(0,1),""))
		flag1<- flag0
	} else{
		flag1<- flag0+1
		int<-(mlogit.model[[1]][1])
		bc1<-(mlogit.model[[1]][7])
		bc2<-(mlogit.model[[1]][13])
		bc3<-(mlogit.model[[1]][19])
		bc4<-(mlogit.model[[1]][25])
		bc5<-(mlogit.model[[1]][31])
		mapNums<- rbind(77,73,76,8,65)
		bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
		okbcs<-!is.na(bcs)
		numFMaps<- length(bcs[okbcs])
		coefs<-cbind(bcs[okbcs],mapNums[okbcs])
		#totnumFM=for all bc values ne "NA" ###
		alloc1<-data.frame(rbind(c(0," "),c(int," "),c(numFMaps," "),coefs, ""))
	}
	
	nname <- paste(filesn, sep=".") ;  assign(nname,rawdata)
	print(nname)
	write.table ( alloc1, paste(filesn,"alloc1.reg",sep=""), row.names=FALSE, col.names=FALSE, quote=FALSE)
	
	#write to alloc file for JRC9='1' industry
	if ( val+1==refval ) {
		alloc1<-data.frame(rbind(c(refval," "),c(val+1," "),c(1,""),c(0,1),""))
		flag2<- flag1
	} else{
		flag2<- flag1+1
		int<-(mlogit.model[[1]][1+flag1])
		bc1<-(mlogit.model[[1]][7+flag1])
		bc2<-(mlogit.model[[1]][13+flag1])
		bc3<-(mlogit.model[[1]][19+flag1])
		bc4<-(mlogit.model[[1]][25+flag1])
		bc5<-(mlogit.model[[1]][31+flag1])
		mapNums<- rbind(77,73,76,8,65)
		bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
		okbcs<-!is.na(bcs)
		numFMaps<- length(bcs[okbcs])
		coefs<-cbind(bcs[okbcs],mapNums[okbcs])
		
		alloc1<-data.frame(rbind(c(val+1,""),c(int,""),c(numFMaps,""),coefs,""))
	}
	write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)
	
	#write to alloc file for JRC9='2' other arable
	if (val+2==refval){
		alloc1<-data.frame(rbind(c(refval," "),c(val+2," "),c(1,""),c(0,1),""))
		flag3<- flag2
	} else{
		flag3<- flag2+1
		int<-(mlogit.model[[1]][1+flag2])
		bc1<-(mlogit.model[[1]][7+flag2])
		bc2<-(mlogit.model[[1]][13+flag2])
		bc3<-(mlogit.model[[1]][19+flag2])
		bc4<-(mlogit.model[[1]][25+flag2])
		bc5<-(mlogit.model[[1]][31+flag2])
		mapNums<- rbind(77,73,76,8,65)
		bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
		okbcs<-!is.na(bcs)
		numFMaps<- length(bcs[okbcs])
		coefs<-cbind(bcs[okbcs],mapNums[okbcs])
	
		#totnumFM=for all bc values ne "NA" ###
		alloc1<-data.frame(rbind(c(val+2,""),c(int,""),c(numFMaps,""),coefs,""))
	}
	write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)
	
	#write to alloc file for JRC9='3' permanent crop
	if ( val+3==refval ) {
		alloc1<-data.frame(rbind(c(refval," "),c(val+3," "),c(1,""),c(0,1),""))
		flag4<- flag3
	} else{
		flag4<- flag3+1
		int<-(mlogit.model[[1]][1+flag3])
		bc1<-(mlogit.model[[1]][7+flag3])
		bc2<-(mlogit.model[[1]][13+flag3])
		bc3<-(mlogit.model[[1]][19+flag3])
		bc4<-(mlogit.model[[1]][25+flag3])
		bc5<-(mlogit.model[[1]][31+flag3])
		mapNums<- rbind(77,73,76,8,65)
		bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
		okbcs<-!is.na(bcs)
		numFMaps<- length(bcs[okbcs])
		coefs<-cbind(bcs[okbcs],mapNums[okbcs])
		
		alloc1<-data.frame(rbind(c(val+3,""),c(int,""),c(numFMaps,""),coefs,""))
	}
	write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)
	
	#write to alloc file for JRC9='4' pasture
	if ( val+4==refval ) {
		alloc1<-data.frame(rbind(c(refval," "),c(val+4," "),c(1,""),c(0,1),""))
		flag5<- flag4
	} else{
		flag5<- flag4+1
		int<-(mlogit.model[[1]][1+flag4])
		bc1<-(mlogit.model[[1]][7+flag4])
		bc2<-(mlogit.model[[1]][13+flag4])
		bc3<-(mlogit.model[[1]][19+flag4])
		bc4<-(mlogit.model[[1]][25+flag4])
		bc5<-(mlogit.model[[1]][31+flag4])
		mapNums<- rbind(77,73,76,8,65)
		bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
		okbcs<-!is.na(bcs)
		numFMaps<- length(bcs[okbcs])
		coefs<-cbind(bcs[okbcs],mapNums[okbcs])
		
		alloc1<-data.frame(rbind(c(val+4,""),c(int,""),c(numFMaps,""),coefs,""))
	}
	write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)
	
	#write to alloc file for JRC9='5' SemiNaturalVegetation
	if ( val+5==refval ) {
		alloc1<-data.frame(rbind(c(refval," "),c(val+5," "),c(1,""),c(0,1),""))
	} else{
		int<-(mlogit.model[[1]][1+flag5])
		bc1<-(mlogit.model[[1]][7+flag5])
		bc2<-(mlogit.model[[1]][13+flag5])
		bc3<-(mlogit.model[[1]][19+flag5])
		bc4<-(mlogit.model[[1]][25+flag5])
		bc5<-(mlogit.model[[1]][31+flag5])
		mapNums<- rbind(77,73,76,8,65)
		bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
		okbcs<-!is.na(bcs)
		numFMaps<- length(bcs[okbcs])
		coefs<-cbind(bcs[okbcs],mapNums[okbcs])
	
		#totnumFM=for all bc values ne "NA" ###
		alloc1<-data.frame(rbind(c(val+5,""),c(int,""),c(numFMaps,""),coefs,""))
	}
	write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)
}

#write to alloc file for JRC9='6' Forest
if ( val+6==refval ) {
	alloc1<-data.frame(rbind(c(refval," "),c(val+6," "),c(1,""),c(0,1),""))
} else{
	int<-(mlogit.model[[1]][1+flag6])
	bc1<-(mlogit.model[[1]][7+flag6])
	bc2<-(mlogit.model[[1]][13+flag6])
	bc3<-(mlogit.model[[1]][19+flag6])
	bc4<-(mlogit.model[[1]][25+flag6])
	bc5<-(mlogit.model[[1]][31+flag6])
	mapNums<- rbind(77,73,76,8,65)
	bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
	okbcs<-!is.na(bcs)
	numFMaps<- length(bcs[okbcs])
	coefs<-cbind(bcs[okbcs],mapNums[okbcs])
	
	#totnumFM=for all bc values ne "NA" ###
	alloc1<-data.frame(rbind(c(val+6,""),c(int,""),c(numFMaps,""),coefs,""))
}
write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)
}

#write to alloc file for JRC9='7' cereals
if (val+2==refval){
alloc1<-data.frame(rbind(c(refval," "),c(val+7," "),c(1,""),c(1,78),""))
flag3<- flag2
} else{
	flag3<- flag2+1
	int<-(mlogit.model[[1]][1+flag2])
	bc1<-(mlogit.model[[1]][7+flag2])
	bc2<-(mlogit.model[[1]][13+flag2])
	bc3<-(mlogit.model[[1]][19+flag2])
	bc4<-(mlogit.model[[1]][25+flag2])
	bc5<-(mlogit.model[[1]][31+flag2])
	bc7<-1
	mapNums<- rbind(77,73,76,8,65,78)
	bcs<-rbind(bc1,bc2,bc3,bc4,bc5,bc7)
	okbcs<-!is.na(bcs)
	numFMaps<- length(bcs[okbcs])
	coefs<-cbind(bcs[okbcs],mapNums[okbcs])

	#totnumFM=for all bc values ne "NA" ###
	alloc1<-data.frame(rbind(c(val+7,""),c(int,""),c(numFMaps,""),coefs,""))
}
write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)
#write to alloc file for JRC9='8' maize
if (val+2==refval){
	alloc1<-data.frame(rbind(c(refval," "),c(val+8," "),c(1,""),c(1,79),""))
	flag3<- flag2
} else{
	flag3<- flag2+1
	int<-(mlogit.model[[1]][1+flag2])
	bc1<-(mlogit.model[[1]][7+flag2])
	bc2<-(mlogit.model[[1]][13+flag2])
	bc3<-(mlogit.model[[1]][19+flag2])
	bc4<-(mlogit.model[[1]][25+flag2])
	bc5<-(mlogit.model[[1]][31+flag2])
	bc7<-1
	mapNums<- rbind(77,73,76,8,65,79)
	bcs<-rbind(bc1,bc2,bc3,bc4,bc5,bc7)
	okbcs<-!is.na(bcs)
	numFMaps<- length(bcs[okbcs])
	coefs<-cbind(bcs[okbcs],mapNums[okbcs])

	#totnumFM=for all bc values ne "NA" ###
	alloc1<-data.frame(rbind(c(val+8,""),c(int,""),c(numFMaps,""),coefs,""))
}
write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)

#write to alloc file for JRC9='9' root crops

if (val+2==refval){
	alloc1<-data.frame(rbind(c(refval," "),c(val+9," "),c(1,""),c(1,80),""))
	flag3<- flag2
} else{
	flag3<- flag2+1
	int<-(mlogit.model[[1]][1+flag2])
	bc1<-(mlogit.model[[1]][7+flag2])
	bc2<-(mlogit.model[[1]][13+flag2])
	bc3<-(mlogit.model[[1]][19+flag2])
	bc4<-(mlogit.model[[1]][25+flag2])
	bc5<-(mlogit.model[[1]][31+flag2])
	bc7<-1
	mapNums<- rbind(77,73,76,8,65,80)
	bcs<-rbind(bc1,bc2,bc3,bc4,bc5,bc7)
	okbcs<-!is.na(bcs)
	numFMaps<- length(bcs[okbcs])
	coefs<-cbind(bcs[okbcs],mapNums[okbcs])
	
	#totnumFM=for all bc values ne "NA" ###
	alloc1<-data.frame(rbind(c(val+9,""),c(int,""),c(numFMaps,""),coefs,""))
}
write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)

#write to alloc file for JRC9='10' abandoned arable
if (val+2==refval){
	alloc1<-data.frame(rbind(c(refval," "),c(val+10," "),c(1,""),c(0,1),""))
	flag3<- flag2
} else{
	flag3<- flag2+1
	int<-(mlogit.model[[1]][1+flag2])
	bc1<-(mlogit.model[[1]][7+flag2])
	bc2<-(mlogit.model[[1]][13+flag2])
	bc3<-(mlogit.model[[1]][19+flag2])
	bc4<-(mlogit.model[[1]][25+flag2])
	bc5<-(mlogit.model[[1]][31+flag2])
	mapNums<- rbind(77,73,76,8,65)
	bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
	okbcs<-!is.na(bcs)
	numFMaps<- length(bcs[okbcs])
	coefs<-cbind(bcs[okbcs],mapNums[okbcs])

	#totnumFM=for all bc values ne "NA" ###
	alloc1<-data.frame(rbind(c(val+10,""),c(int,""),c(numFMaps,""),coefs,""))
}
write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)

#write to alloc file for JRC9='11' abandoned permanent crop

if ( val+3==refval ) {
	alloc1<-data.frame(rbind(c(refval," "),c(val+11," "),c(1,""),c(0,1),""))
	flag4<- flag3
} else{
	flag4<- flag3+1
	int<-(mlogit.model[[1]][1+flag3])
	bc1<-(mlogit.model[[1]][7+flag3])
	bc2<-(mlogit.model[[1]][13+flag3])
	bc3<-(mlogit.model[[1]][19+flag3])
	bc4<-(mlogit.model[[1]][25+flag3])
	bc5<-(mlogit.model[[1]][31+flag3])
	mapNums<- rbind(77,73,76,8,65)
	bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
	okbcs<-!is.na(bcs)
	numFMaps<- length(bcs[okbcs])
	coefs<-cbind(bcs[okbcs],mapNums[okbcs])
	
	alloc1<-data.frame(rbind(c(val+11,""),c(int,""),c(numFMaps,""),coefs,""))
}
write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)

#write to alloc file for JRC9='12' abandoned pasture
if ( val+4==refval ) {
	alloc1<-data.frame(rbind(c(refval," "),c(val+12," "),c(1,""),c(0,1),""))
	flag5<- flag4
} else{
	flag5<- flag4+1
	int<-(mlogit.model[[1]][1+flag4])
	bc1<-(mlogit.model[[1]][7+flag4])
	bc2<-(mlogit.model[[1]][13+flag4])
	bc3<-(mlogit.model[[1]][19+flag4])
	bc4<-(mlogit.model[[1]][25+flag4])
	bc5<-(mlogit.model[[1]][31+flag4])
	mapNums<- rbind(77,73,76,8,65)
	bcs<-rbind(bc1,bc2,bc3,bc4,bc5)
	okbcs<-!is.na(bcs)
	numFMaps<- length(bcs[okbcs])
	coefs<-cbind(bcs[okbcs],mapNums[okbcs])
	
	alloc1<-data.frame(rbind(c(val+12,""),c(int,""),c(numFMaps,""),coefs,""))
}
write.table ( alloc1, paste(filesn, "alloc1.reg", sep=""), append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE)

							################  PROGRAM END #######################
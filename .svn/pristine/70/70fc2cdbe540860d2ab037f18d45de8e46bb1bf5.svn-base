Container DynamicFactorDefinitions
{
	unit<uint32> DynamicFactors: expr = "combine(VariableInteractions, DynamicFactorsList)"
	{
		attribute<string> Name: 		expr = "VariableInteractions/Name[nr_1] + DynamicFactorsList/Name[nr_2]";
		attribute<string> StartExpr:	expr = "VariableInteractions/StartExec[nr_1] + DynamicFactorsList/StartExpr[nr_2]";
		attribute<string> DynExpr:		expr = "VariableInteractions/DynExec[nr_1] + DynamicFactorsList/DynExpr[nr_2]";
		attribute<bool>	  Concurrent:	expr = "DynamicFactorsList/Concurrent[nr_2]";
		attribute<uint32> Id:			expr = "Name = 'AbandonableUrban' ? 11 : 9999999";
	}
	
	unit<uint32> VariableInteractions: NrOfRows = 6
	{
		attribute<string> Name: ['','Qi_below2_x_','Qi_2to5_x_','Qi_5to10_x_','Qi_10to50_x_','Qi_50plus_x_'];
		attribute<string> StartExec: ['', 'float32(StartingState/Qi < float32(2)) * ', 
			'float32(StartingState/Qi >= float32(2) && 	StartingState/Qi < float32(5)) * ','float32(StartingState/Qi >= float32(5) && 	StartingState/Qi < float32(10)) * ',
			'float32(StartingState/Qi >= float32(10) && 	StartingState/Qi < float32(50)) * ', 'float32(StartingState/Qi >= float32(50)) * '];
		attribute<string> DynExec: ['', 'float32(Qi < float32(2)) * ', 
			'float32(Qi >= float32(2) && 	Qi < float32(5)) * ','float32(Qi >= float32(5) && 	Qi < float32(10)) * ',
			'float32(Qi >= float32(10) && 	Qi < float32(50)) * ', 'float32(Qi >= float32(50)) * '];
	}
	unit<uint32> DynamicFactorsList: expr = "union_unit(OrgDynamicFactorsList, NeighDynamicFactorsList)"
	{
		attribute<string> Name: 		expr = "union_data(.,OrgDynamicFactorsList/Name, NeighDynamicFactorsList/Name)";
		attribute<string> StartExpr: 	expr = "union_data(.,OrgDynamicFactorsList/StartExpr, NeighDynamicFactorsList/StartExpr)";
		attribute<string> DynExpr: 		expr = "union_data(.,OrgDynamicFactorsList/DynExpr, NeighDynamicFactorsList/DynExpr)";
		attribute<bool>   Concurrent:	expr = "union_data(.,OrgDynamicFactorsList/Concurrent, OrgDynamicFactorsList/Concurrent)";
	}

	unit<uint32> NeighDynamicFactorsList: expr = "OrgDynamicFactorsList"
	{
		attribute<string> Name: 		expr = "'Neigh_' + OrgDynamicFactorsList/Name";
		attribute<string> StartExpr: 	expr = "'MakeDefined(potential('+ OrgDynamicFactorsList/Name +'[domain/BasisGrid], Parameters/FuncKernels/QueensNeighbours/Matr)[domain/grid_rel] / StartingState/NeighboursWeight, 0[float32])'";
		attribute<string> DynExpr: 		expr = "StartExpr";
	}
	unit<uint32> OrgDynamicFactorsList: NrOfRows = 47 // internal set of actual factors, @USERINPUT: keep NrOfRows in sync with the actual nr of model classes1
	{
		parameter<uint32> nrAttr: Expr = "3", isHidden = "True";
		unit<UInt32> Elements: Expr = "Range(uint32, 0, (nrAttr*#OrgDynamicFactorsList))", isHidden = "True"
		{
			attribute<string> Text: 
			//Name,  			ValueType,		RegExpr,		concurrent?													StartExpr
			['Urban'				,'float32(ModelType/IsUrban[landuse])'																							,null
			,'Qi'					,'ResultingState/Qi'																											,'CaseData/PrepareVariables/LoadSpatialData/Population_2012/inFile/ReadData[domain/grid_rel]'
			,'Si'					,'ResultingState/Si'																											,'StartingState/Si'
			,'ProbTouristic'		,'float32(ModelType/isUrban[StartingState/landuse] && StartingState/Qi = 0[float32])'											,null
			,'AbandonableUrban' 	,'float32(Qi < 3[float32] && (Qi < (float32(0.25) * StartingState/Qi)) && ProbTouristic = 0[float32])'							,null
			,'age0'					,'float32(CaseData/PrepareVariables/LoadSpatialData/age0/inFile/ReadData[domain/grid_rel])'										,null
			,'Slope100'				,'float32(CaseData/PrepareVariables/LoadSpatialData/slope_euro/inFile/ReadData[domain/grid_rel])'								,null
			,'Water_km'				,'float32(CaseData/PrepareVariables/LoadSpatialData/DistToWater/inFile/ReadData[domain/grid_rel]) / float32(1000)'			,null
			,'sosl_100'				,'float32(CaseData/PrepareVariables/LoadSpatialData/sosl_euro/inFile/ReadData[domain/grid_rel])'								,null
			,'natura2000_v2011'		,'float32(IsDefined(CaseData/PrepareVariables/LoadSpatialData/natura2000_v2011/RasterIds)[domain/grid_rel])'					,null
			,'nda'					,'float32(IsDefined(CaseData/PrepareVariables/LoadSpatialData/NDA/RasterIds)[domain/grid_rel])'									,null
			,'Elevation_100'		,'float32(replace_value(CaseData/PrepareVariables/LoadSpatialData/Eu27_e_ha/inFile/ReadData[domain/grid_rel], Int16(-32768), Int16(0 / 0)))'					,null
			,'slope100_cont'		,'float32(CaseData/PrepareVariables/LoadSpatialData/slope_continuous/inFile/ReadData[domain/grid_rel])'							,null
			,'aspect100'			,'float32(CaseData/PrepareVariables/LoadSpatialData/aspect_degrees/inFile/ReadData[domain/grid_rel])'							,null
			,'IndustryAllowed'		,'float32(float32(CaseData/PrepareVariables/LoadSpatialData/IndustryMask/inFile/ReadData[domain/grid_rel]) < float32(1))' 		,null	
			,'SalinitySuit'			,'float32(Classifications/salinityClass/Suitvalue[CaseData/PrepareVariables/LoadSpatialData/Salinity2/inFile/ReadData[Classifications/salinityClass]])[domain/grid_rel]'				,null	
			,'ErodibilitySuit'		,'float32(Classifications/erodibilityClass/Suitvalue[CaseData/PrepareVariables/LoadSpatialData/Erodibility/inFile/ReadData[Classifications/erodibilityClass]])[domain/grid_rel]'				,null	
			,'ContaminationSuit'	,'float32(CaseData/PrepareVariables/LoadSpatialData/ContaminatedLand/inFile/ReadData == 4[uint8] || CaseData/PrepareVariables/LoadSpatialData/ContaminatedLand/inFile/ReadData == 5[uint8])[domain/grid_rel] * float32(20)'				,null	
			,'NECR_LocSpec'			,'SalinitySuit + ErodibilitySuit + ContaminationSuit'																			,null
			,'LocSpecSQ'			,'float32(CaseData/PrepareVariables/LoadSpatialData/locspecSQ/inFile/ReadData[domain/grid_rel])'								,null
			,'SQLocSpec_nat01'		,'float32(CaseData/PrepareVariables/LoadSpatialData/SQLocSpec_nat01/inFile/ReadData[domain/grid_rel])'							,null
			,'locspec_intgr_agric'	,'float32(CaseData/PrepareVariables/LoadSpatialData/locspec_intgr_agric/inFile/ReadData[domain/grid_rel])'						,null
			,'locspec_intgr_past'	,'float32(CaseData/PrepareVariables/LoadSpatialData/locspec_intgr_past/inFile/ReadData[domain/grid_rel])'						,null
			,'locspec_intgr_sv'		,'float32(CaseData/PrepareVariables/LoadSpatialData/locspec_intgr_sv/inFile/ReadData[domain/grid_rel])'							,null
			,'locspec_intgr_aban'	,'float32(CaseData/PrepareVariables/LoadSpatialData/locspec_intgr_aban/inFile/ReadData[domain/grid_rel])'						,null
			,'DistRoads'			,'max_elem(float32(CaseData/PrepareVariables/LoadSpatialData/DistToRoads/inFile/ReadData[domain/grid_rel]) - float32(100), float32(0))', null
			,'SuitCereals'			,'float32(CaseData/PrepareVariables/LoadSpatialData/SuitabilityCereals/inFile/ReadData[domain/grid_rel])', 						null
			,'SuitMaize'			,'float32(CaseData/PrepareVariables/LoadSpatialData/SuitabilityMaize/inFile/ReadData[domain/grid_rel])', 						null
			,'SuitRoot'				,'float32(CaseData/PrepareVariables/LoadSpatialData/SuitabilityRootcrops/inFile/ReadData[domain/grid_rel])', 					null
			,'SuitCerealsTF'		,'SuitCereals  	* Float32(-0.01)', 																								null
			,'SuitMaizeTF'			,'SuitMaize  	* Float32(-0.01)', 																								null
			,'SuitRootTF'			,'SuitRoot  * Float32(-0.01)', 																									null
			,'SuitCerealsPost2030'	,'float32(CaseData/PrepareVariables/LoadSpatialData/SuitCerealsPost2030/inFile/ReadData[domain/grid_rel])', 					null
			,'SuitMaizePost2030'	,'float32(CaseData/PrepareVariables/LoadSpatialData/SuitMaizePost2030/inFile/ReadData[domain/grid_rel])', 						null
			,'SuitRootPost2030'		,'float32(CaseData/PrepareVariables/LoadSpatialData/SuitRootPost2030/inFile/ReadData[domain/grid_rel])', 						null
			,'SuitCerealsPost2030TF','(SuitCerealsPost2030  * Float32(-0.008)) + SuitCerealsTF', 																	null
			,'SuitMaizePost2030TF'	,'(SuitMaizePost2030  * Float32(-0.008)) + SuitMaizeTF', 																		null
			,'SuitRootPost2030TF'	,'(SuitRootPost2030  * Float32(-0.008)) + SuitRootTF', 																			null
			// below still needs rice fields addition.
			,'SuitOtherArableTF'	,'((Float32(SuitCereals)+ Float32(SuitMaize)+ Float32(SuitRoot)) /float32(3)) ', 												null
			,'PotentialAccess'		,'Float32(CaseData/PrepareVariables/LoadSpatialData/PotentialAccess/inFile/ReadData[domain/grid_rel]) / float32(1000 * 100)',													null
			,'ln_water'				,'float32(log(Water_km + float32(0.01)))',																						null
			,'TownAccess'			,'float32(const(0,domain,float32))',																							null			
			,'CoastalZone'			,'float32(replace_value(PrepareVariables/LoadSpatialData/coastalZone/inFile/ReadData, uint8(-1), uint8(0)))[domain/grid_rel]',	null
			,'NDA'					,'float32(replace_value(PrepareVariables/LoadSpatialData/NDAs/inFile/ReadData, uint8(-1), uint8(0)))[domain/grid_rel]',			null
			,'erosionRisk'			,'float32(replace_value(PrepareVariables/LoadSpatialData/erosionRisk/inFile/ReadData, Int16(-32768), Int16(0 / 0)))[domain/grid_rel]',			null
			,'IsPeatLands'			,'PrepareVariables/LoadSpatialData/Peatlands/inFile/ReadData[domain/grid_rel] = uint8(1) ? float32(15) : float32(0)',			null
			,'IsContaminated'		,'PrepareVariables/LoadSpatialData/ContaminatedLand/inFile/ReadData[domain/grid_rel] = uint8(4) || 
				PrepareVariables/LoadSpatialData/ContaminatedLand/inFile/ReadData[domain/grid_rel] = uint8(5) ? float32(20) : float32(0)',							null
			];
		}
		attribute<FactorID> ID:        	expr = "rlookup(Name, FactorId/Name)";
		attribute<string> Name: 		expr = "Elements/Text[value((uint32(id(.)) * nrAttr)+0, Elements)]";
		attribute<string> DynExpr:		expr = "Elements/Text[value((uint32(id(.)) * nrAttr)+1, Elements)]";
		attribute<string> StartExpr:	expr = "MakeDefined(Elements/Text[value((uint32(id(.)) * nrAttr)+2, Elements)], DynExpr)";
		attribute<bool>   Concurrent:	expr = "Name = 'PopulationPressure'";
	}
}
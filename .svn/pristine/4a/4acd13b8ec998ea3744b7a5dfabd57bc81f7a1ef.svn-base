container Luisetta
:	IntegrityCheck = "GeoDmsVersion() >= 7.022"  // 7.022 needed for improved poly2grid function
//:	IntegrityCheck = "GeoDmsVersion() >= 7.015"  // 7.015 needed for adaptations to the code-breaking new reprojections
//:	IntegrityCheck = "GeoDmsVersion() >= 7.005"  // 7.005 needed for derivation of the platform specific %OdbcExcelDriver% placeHolder
//:	IntegrityCheck = "GeoDmsVersion() >= 6.0309" // 6.031 required for array-based FullPathName
//:	IntegrityCheck = "GeoDmsVersion() >= 6.0169" // required for d_alloc on checking that Suitabilities are Int32 for fixing issue 100
//	"&& (GeoDmsVersion() < 6.0189 || GeoDmsVersion() > 6.0229)" // versions 6.018..6.022 seem to have a bug in exporting .dbf files. Is fixed in 6.023
//:	IntegrityCheck = "GeoDmsVersion() >= 6.016"  // required for tile support of Unique operator used in the renumbering of ClaimRegions
//:	IntegrityCheck = "GeoDmsVersion() >= 6.014"  // required for writing tiffs (as in LisFlood indicator production)
//:	IntegrityCheck = "GeoDmsVersion() >= 6.012"  // required for reading/writing numeric arrays from/to str storage managers (for binary files).
//:	IntegrityCheck = "GeoDmsVersion() >= 6.011"

,	FreeData = "True"
{
	container ConfigSettings : IsHidden = "True"
	{
		
		container Overridable: Descr = "From 6.069 on only this container will be overridable with Tools->Options->ConfigSettings that sets user/machine specific overrides in the registry"
		{
			parameter<String> RunRegions: [ 'Nuts1' ]; // @USERINPUT: Nuts1 or JrcRegion
			parameter<String> SourceDataProjDir: [ '%SourceDataDir%/Luisetta' ];
		}
		
		// driver name is different on x64, after installing new x64 drivers (incl related SP1), see http://www.mantis.objectvision.nl/view.php?id=249
		parameter<String> OdbcExcelDriver: Expr = "(GeoDmsPlatform()=='Win32') ? '{Microsoft Excel Driver (*.xls)}' : '{Microsoft Excel Driver (*.xls, *.xlsx, *.xlsm, *.xlsb)}'"; 
		parameter<String> OdbcTxtDriver:   Expr = "(GeoDmsPlatform()=='Win32') ? '{Microsoft Text Driver (*.txt; *.csv)}' : '{Microsoft Access Text Driver (*.txt, *.csv)}'"; 
		
		container Tools
		{
			parameter<Int32> NrGroups: [ 1 ]; // 1 for Zoom tools; 2 for additional selection tools; and 3 for addtional edit tools.
		}
	}
	
	#include <Units.dms>
	#include <Geography.dms>
	#include <Classifications.dms>

	#include <LandUseData.dms>
	#include <DataPreparation.dms>

	#include <MetaData.dms>
				
	#include <JrcFactorDataTempl.dms>

	#include <ShapeData.dms>
//	container JrcFactorData: Expr = "JrcFactorDataTempl(Geography/Lambert100mGrid, Parameters/PeriodSet/result/BaseYearCorineDataFileName)";

	#include <Parameters.dms>

	container LandUseModels: Using = "Units;Geography;Classifications", isHidden = "True"
	{
		#include <ModelTraits.dms>
		#include <DynaClueTimeStep100.dms>
		
		#include <JrcClueWrap.dms>
	}
	#include <Runs.dms>
	container CompareResultsContainer;
	#include <GenerateEU.dms>
	#include <IndicatorData.dms>
	container Indicators
	{
		parameter<string> Dirname: Expr = "'%localdataprojdir%/Results.use/EU'"; // decoupled mozaiking from indicator calculations 
		unit<UInt16> Periods: Expr = "Parameters/PeriodSet/result";
		unit<UInt16> Lustrum:   Expr = "Periods/Lustrum";
		unit<UInt16> Decennium: Expr = "Periods/Decennium";
		
		container LandUseGridPerYearVT: Expr = 
			"for_each_ndva("
				"Periods/Name, "
				"Geography/Lambert100mGrid, "
				"Classifications/LU/ViewType, "
				"DirName+'/LandUseVT_'+Periods/YearStr+'.tif'"
			")";
		unit<UInt32> domain: Expr = "='subset(IsDefined(LandUseGridperYearVT/'+First(Periods/Name)+'))'"
			,	DialogType = "Map"
			,	DialogData = "BasisGrid"
		{
			attribute<Geography/Lambert100mGrid> Grid_rel(.): Expr = "nr_OrgEntity";
			attribute<.> BasisGrid(Geography/Lambert100mGrid): Expr = "invert(nr_OrgEntity)", FreeData = "False";
		}

		container LandUsePerYearVT: Expr =
			"for_each_nedv("
				"Periods/Name, "
				"'LandUseGridPerYearVT/'+Periods/Name+'[domain/nr_OrgEntity]', "
				"domain, "
				"Classifications/LU/ViewType"
			")";

		container LandUseGridPerYearMT: Expr = 
			"for_each_nedv("
				"Periods/Name, "
				"'Classifications/LU/ViewType/MT[LandUseGridPerYearVT/'+Periods/Name+']',"
				"Geography/Lambert100mGrid, "
				"Classifications/LU/ModelType "
			")";
		container LandUsePerYearMT: Expr =
			"for_each_nedv("
				"Periods/Name, "
				"'Classifications/LU/ViewType/MT[LandUsePerYearVT/'+Periods/Name+']',"
				"domain, "
				"Classifications/LU/ModelType"
			")";
		container EU: Expr = 
			"IndicatorData/EvaluationTemplate100("
				"Classifications/LU/ModelType, "
				"Periods, "
				"Geography/Lambert100mGrid, domain, "
				"LandUseGridPerYearMT, LandUsePerYearMT, "
				"JrcFactorData, "
				"'%LocalDataProjDir%/Indicators',"
				"Parameters/PopSets/RegionalPopulation/Demands/Qj,"
				"Geography/Regions/Nuts2,"
				"JrcFactorData/Nuts2, "
				"ID(Geography/Regions/Nuts2) "
			")";
	}
	#include <Templates.dms>
	#include <ExploreTools.dms>
	#include <ExportSettings.dms>
}
